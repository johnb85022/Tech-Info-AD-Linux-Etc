# very simple NXLOG config to send dns logs, a flat file to a 
# fluentd server
# see https://nxlog.co/documentation/nxlog-user-guide/windows-dns-server.html
# I did not break it down to fields , just needed the logs for now.
# Panic Soft
# NoFreeOnExit TRUE

define ROOT     C:\Program Files (x86)\nxlog
define CERTDIR  %ROOT%\cert
define CONFDIR  %ROOT%\conf
define LOGDIR   %ROOT%\data
define LOGFILE  %LOGDIR%\nxlog.log
LogFile %LOGFILE%

Moduledir %ROOT%\modules
CacheDir  %ROOT%\data
Pidfile   %ROOT%\data\nxlog.pid
SpoolDir  %ROOT%\data

# edit and restart as needed
## LogLevel DEBUG
Loglevel INFO

# toss blank lines, add host name to leader 
<Input in>
 Module im_file
 File 'C:\Windows\System32\LogFiles\Dns.log' 
<Exec>
# put the host name in the event, for easy find
$Hostname = 'MYDNSSERVER.DOMAIN>COM ';
# drop blanks win has \r\n ending , this stops messages with only the \r
  if $raw_event =~ /(^$|^\s+$)/
 { drop(); }
 $raw_event = $Hostname + $raw_event;
</Exec> 
</Input>

<Output out>

   Module om_tcp
# where to send the logs too, the flunted server in this case. 
   Host 10.100.101.56

   Port 5140
</Output> 

<Route r>
Path in => out
</Route>

<Extension _charconv>
    Module      xm_charconv
    AutodetectCharsets iso8859-2, utf-8, utf-16, utf-32
</Extension>

<Extension _exec>
    Module      xm_exec
</Extension>

<Extension _fileop>
    Module      xm_fileop

    # Check the size of our log file hourly, rotate if larger than 5MB
    <Schedule>
        Every   1 hour
        Exec    if (file_exists('%LOGFILE%') and \
                   (file_size('%LOGFILE%') >= 5M)) \
                    file_cycle('%LOGFILE%', 8);
    </Schedule>

    # Rotate our log file every week on Sunday at midnight
    <Schedule>
        When    @weekly
        Exec    if file_exists('%LOGFILE%') file_cycle('%LOGFILE%', 8);
    </Schedule>
</Extension>
