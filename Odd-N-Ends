

Date from ansible , ansible_date_time to see all formats, etc. 
---
- name: display date
  hosts: dnshosteast001
  tasks:
    - debug: var=ansible_date_time.iso8601

Use find to look at the proc pid tables , this example the VmSawp size used. 
find /proc/*/status -exec cat {} \; |grep -e '^Pid:' -e VmSwap

useing pidof to look in detail at a set of pids of a name, pidstat can to the same, this is 
just another way to dig out details.
pidof bash |xargs ps -up

Handy use of grep , are the two files the same ? Note the order of the file names really changes things. 
grep -vFxf yesterday.txt today.txt 

Use file yesterday as the point of ref, the regeg to seek in the today file, in a way showing what has been added in to the
today set. 
grep -vFxf yesterday.txt today.txt

What file and what line number we are talking about, the -n and -H are handy when debuging grep options. 
grep -nHvFxf yesterday.txt today.txt

If I flip the files, then I can see what has been dropped from today. 
grep -vFxf today.txt yesterday.txt

Handy tcpdumps I like.
Good Web ref for tcpdump 
https://danielmiessler.com/study/tcpdump/

Examaple of filtering out stuff. -c helps to stop it if I forget.
tcpdump '( (not arp) and (not port 22) and ( not port 68) )' -c 99999

Can help us to see details of the protocols. 
tcpdump '( (not arp) and (not port 22) and ( not port 68) )' -vv 

Will try to open the packets and show us ASCCI 
tcpdump '( (not arp) and (not port 22) and ( not port 68) )' -vv -A 

Simple watch this one IP to see the flows. 
tcpdump -vv -i ens128 'host 10.10.10.10' 

What day is it? Silly fun, not bad syntax examples. 
::::::::::::::
friday-yet.sh
::::::::::::::
date "+%A" |grep -q "Fri" && ( cowsay -f tux "$(date "+%A") YES"|lolcat -p 1 -F .01 -a ) || cowsay $(date "+%D %A")
::::::::::::::
friday.yet.sh
::::::::::::::
date |grep -q -e "Fri" && ( echo "FRIDAY" |cowsay|lolcat ) || echo no|cowsay|lolcat




